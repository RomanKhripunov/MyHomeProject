package roman.other.hripunov;

public class TextForFile {
    private String textFile;
    public TextForFile(){
        this.textFile = "Иногда требуется гарантировать, что определенный \r\n" +
                "участок кода будет выполняться независимо от того, \r\n" +
                "какие исключения были возбуждены и перехвачены. Для \r\n" +
                "создания такого участка кода используется ключевое \r\n" +
                "слово finally. Даже в тех случаях, когда в методе \r\n" +
                "нет соответствующего возбужденному исключению раздела catch, \r\n" +
                "блок finally будет выполнен до того, как управление перейдет \r\n" +
                "к операторам, следующим за разделом try. У каждого раздела try \r\n" +
                "должен быть по крайней мере или один раздел catch или блок finally. \r\n" +
                "Блок finally очень удобен для закрытия файлов и освобождения любых других ресурсов, \r\n" +
                "захваченных для временного использования в начале выполнения метода. \r\n" +
                "Ниже приведен пример класса с двумя методами, завершение которых \r\n" +
                "происходит по разным причинам, но в обоих перед выходом выполняется код раздела finally. \r\n" +
                "Иногда требуется гарантировать, что определенный \r\n" +
                "участок кода будет выполняться независимо от того, \r\n" +
                "какие исключения были возбуждены и перехвачены. Для \r\n" +
                "создания такого участка кода используется ключевое \r\n" +
                "слово finally. Даже в тех случаях, когда в методе \r\n" +
                "нет соответствующего возбужденному исключению раздела catch, \r\n" +
                "блок finally будет выполнен до того, как управление перейдет \r\n" +
                "к операторам, следующим за разделом try. У каждого раздела try \r\n" +
                "должен быть по крайней мере или один раздел catch или блок finally. \r\n" +
                "Блок finally очень удобен для закрытия файлов и освобождения любых других ресурсов, \r\n" +
                "захваченных для временного использования в начале выполнения метода. \r\n" +
                "Ниже приведен пример класса с двумя методами, завершение которых \r\n" +
                "происходит по разным причинам, но в обоих перед выходом выполняется код раздела finally. \r\n" +
                "Иногда требуется гарантировать, что определенный \r\n" +
                "участок кода будет выполняться независимо от того, \r\n" +
                "какие исключения были возбуждены и перехвачены. Для \r\n" +
                "создания такого участка кода используется ключевое \r\n" +
                "слово finally. Даже в тех случаях, когда в методе \r\n" +
                "нет соответствующего возбужденному исключению раздела catch, \r\n" +
                "блок finally будет выполнен до того, как управление перейдет \r\n" +
                "к операторам, следующим за разделом try. У каждого раздела try \r\n" +
                "должен быть по крайней мере или один раздел catch или блок finally. \r\n" +
                "Блок finally очень удобен для закрытия файлов и освобождения любых других ресурсов, \r\n" +
                "захваченных для временного использования в начале выполнения метода. \r\n" +
                "Ниже приведен пример класса с двумя методами, завершение которых \r\n" +
                "происходит по разным причинам, но в обоих перед выходом выполняется код раздела finally. \r\n";
    }
    public String getTextFile(){
            return this.textFile;
    }
}
